{
  "openapi": "3.0.0",
  "info": {
    "title": "Notifications API",
    "version": "1.1.5-oas3",
    "license": {
      "name": "Business Source License 1.1",
      "url": "https://github.com/primev/mev-commit/blob/main/LICENSE"
    }
  },
  "paths": {
    "/v1/subscribe": {
      "post": {
        "summary": "Subscribe",
        "description": "Subscribe to notifications for given topics. The client will receive\nnotifications for the topics it has subscribed to. The client can\nsubscribe to multiple topics.",
        "operationId": "Notifications_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/v1Notification"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  },
                  "title": "Stream result of v1Notification"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1SubscribeRequest"
              }
            }
          },
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "googlerpcStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            }
          }
        }
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string"
          }
        },
        "additionalProperties": {}
      },
      "protobufNullValue": {
        "type": "string",
        "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`."
      },
      "v1Notification": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "example": "peer_connected",
            "description": "Topic of the notification.",
            "title": "Topic of the notification"
          },
          "value": {
            "type": "object",
            "example": {
              "ethAddress": "0x123...",
              "type": "provider"
            },
            "description": "Payload depends on the topic.\n\n## peer_connected\n```json\n{\n  \"ethAddress\": \"0x...\", // Ethereum address of the peer in hex format\n  \"type\": \"string\"       // Type of the peer: \"bootnode\", \"provider\", or \"bidder\"\n}\n```\n\n## peer_disconnected\n```json\n{\n  \"ethAddress\": \"0x...\", // Ethereum address of the peer in hex format\n  \"type\": \"string\"       // Type of the peer:\"bootnode\", \"provider\", or \"bidder\"\n}\n```\n\n## validator_opted_in\n```json\n{\n  \"epoch\": uint64,       // Epoch number\n  \"slot\": uint64,        // Slot number\n  \"bls_key\": \"string\"    // BLS key of the validator\n}\n```\n\n## epoch_validators_opted_in\n```json\n{\n  \"epoch\": uint64,             // Epoch number\n  \"epoch_start_time\": uint64,  // Timestamp of epoch start\n  \"slots\": [                   // Array of opted-in slots\n    {\n      // opted-in slot details\n    }\n  ]\n}\n```## provider_slashed\n```json\n{\n  \"provider\": \"0x...\",       // Address of the node\n  \"amount\": uint64,        // Amount slashed\n  \"hasEnoughStake\": \"bool\"    // Provider has enough stake after slash\n}\n```\n\n## commitment_store_failed\n```json\n{\n  \"commitment_digest\": \"0x...\", // Digest in hex of the commitment that failed to store\n  \"txn_hash\": \"0x...\"     // Transaction hash committed to.\n \"error\": string   // Error that occurred on-chain\n}\n```\n\n## commitment_open_failed\n```json\n{\n  \"commitment_digest\": \"0x...\", // Digest of the commitment that failed to open\n  \"txn_hash\": \"0x...\"     // Transaction hash committed to.\n \"error\": string      \\ Error that occurred on-chain}\n```",
            "title": "Payload of the notification"
          }
        },
        "title": "Notification represents a notification message sent to subscribers"
      },
      "v1SubscribeRequest": {
        "type": "object",
        "properties": {
          "topics": {
            "type": "array",
            "example": [
              "peer_connected",
              "validator_opted_in"
            ],
            "items": {
              "type": "string"
            },
            "description": "List of topics to subscribe to. Available topics:\n\n- peer_connected: Emitted when a peer connects to the network\n- peer_disconnected: Emitted when a peer disconnects from the network\n- validator_opted_in: Emitted before an upcoming L1 block proposer has opted in to the mev-commit protocol\n- epoch_validators_opted_in: Emitted at the beginning of an epoch, specifying any slots where the L1 validator is opted-in to mev-commit\n- provider_slashed: Emitted when the provider node is slashed.\n- commitment_store_failed: Emitted when the commitment storing transaction fails.\n- commitment_open_failed: Emitted when the commitment opening transaction fails.",
            "title": "Topics to subscribe to"
          }
        },
        "title": "SubscribeRequest represents a request to subscribe to notification topics"
      }
    }
  }
}
