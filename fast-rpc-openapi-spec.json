{
  "openapi": "3.0.0",
  "info": {
    "title": "Bidder API",
    "version": "1.0.0",
    "license": {
      "name": "Business Source License 1.1",
      "url": "https://github.com/primev/mev-commit/blob/main/LICENSE"
    }
  },
  "paths": {
    "/": {
      "post": {
        "summary": "Preconf JSON-RPC",
        "description": "Generic JSON-RPC endpoint to interact with preconfirmation RPC methods.",
        "operationId": "PreconfRpc",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "eth_getTransactionCount",
                    "description": "Returns the transaction count including queued transactions in the RPC provider\u2019s private pool. May differ from public mempool.",
                    "properties": {
                      "jsonrpc": {
                        "type": "string",
                        "example": "2.0"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "eth_getTransactionCount"
                        ]
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "params": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 2,
                        "maxItems": 2,
                        "description": "Takes two parameters: address and block tag."
                      }
                    },
                    "required": [
                      "jsonrpc",
                      "method",
                      "id",
                      "params"
                    ]
                  },
                  {
                    "type": "object",
                    "title": "eth_maxPriorityFeePerGas",
                    "description": "Overrides default behavior to return zero priority fee, preventing clients from using the underlying provider\u2019s suggested fee.",
                    "properties": {
                      "jsonrpc": {
                        "type": "string",
                        "example": "2.0"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "eth_maxPriorityFeePerGas"
                        ]
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "params": {
                        "type": "array",
                        "items": {},
                        "minItems": 0,
                        "maxItems": 0,
                        "description": "No parameters."
                      }
                    },
                    "required": [
                      "jsonrpc",
                      "method",
                      "id",
                      "params"
                    ]
                  },
                  {
                    "type": "object",
                    "title": "eth_sendRawTransaction",
                    "description": "Custom implementation that logs the transaction locally and enqueues it for broadcasting on the mev-commit network.",
                    "properties": {
                      "jsonrpc": {
                        "type": "string",
                        "example": "2.0"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "eth_sendRawTransaction"
                        ]
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "params": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "maxItems": 1,
                        "description": "Takes one parameter: the raw signed transaction data."
                      }
                    },
                    "required": [
                      "jsonrpc",
                      "method",
                      "id",
                      "params"
                    ]
                  },
                  {
                    "type": "object",
                    "title": "eth_getTransactionReceipt",
                    "description": "Returns early receipts for mev-commit transactions. Uses custom block hashes to indicate preconfirmed status.",
                    "properties": {
                      "jsonrpc": {
                        "type": "string",
                        "example": "2.0"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "eth_getTransactionReceipt"
                        ]
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "params": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "maxItems": 1,
                        "description": "Takes one parameter: transaction hash."
                      }
                    },
                    "required": [
                      "jsonrpc",
                      "method",
                      "id",
                      "params"
                    ]
                  },
                  {
                    "type": "object",
                    "title": "eth_getBlockByHash",
                    "description": "Filters and returns preconfirmed blocks from mev-commit receipts. Falls back to upstream for others.",
                    "properties": {
                      "jsonrpc": {
                        "type": "string",
                        "example": "2.0"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "eth_getBlockByHash"
                        ]
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "params": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 2,
                        "maxItems": 2,
                        "description": "Takes two parameters: block hash and boolean to include full transactions."
                      }
                    },
                    "required": [
                      "jsonrpc",
                      "method",
                      "id",
                      "params"
                    ]
                  },
                  {
                    "type": "object",
                    "title": "mevcommit_getTransactionCommitments",
                    "description": "Given a transaction hash, returns a list of commitments, digests, signatures, and bid details received on the mev-commit network.",
                    "properties": {
                      "jsonrpc": {
                        "type": "string",
                        "example": "2.0"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "mevcommit_getTransactionCommitments"
                        ]
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "params": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "maxItems": 1,
                        "description": "Takes one parameter: transaction hash."
                      }
                    },
                    "required": [
                      "jsonrpc",
                      "method",
                      "id",
                      "params"
                    ]
                  },
                  {
                    "type": "object",
                    "title": "mevcommit_optedInBlock",
                    "description": "Returns the number of seconds until the next validator block that has opted into mev-commit.",
                    "properties": {
                      "jsonrpc": {
                        "type": "string",
                        "example": "2.0"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "mevcommit_optedInBlock"
                        ]
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "params": {
                        "type": "array",
                        "items": {},
                        "minItems": 0,
                        "maxItems": 0,
                        "description": "No parameters."
                      }
                    },
                    "required": [
                      "jsonrpc",
                      "method",
                      "id",
                      "params"
                    ]
                  },
                  {
                    "type": "object",
                    "title": "mevcommit_estimateDeposit",
                    "description": "Estimates the deposit amount and returns the service-owned EOA address where the user should send funds.",
                    "properties": {
                      "jsonrpc": {
                        "type": "string",
                        "example": "2.0"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "mevcommit_estimateDeposit"
                        ]
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "params": {
                        "type": "array",
                        "items": {},
                        "minItems": 0,
                        "maxItems": 0,
                        "description": "No parameters."
                      }
                    },
                    "required": [
                      "jsonrpc",
                      "method",
                      "id",
                      "params"
                    ]
                  },
                  {
                    "type": "object",
                    "title": "mevcommit_getBalance",
                    "description": "Returns the user's available balance after depositing into the RPC provider.",
                    "properties": {
                      "jsonrpc": {
                        "type": "string",
                        "example": "2.0"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "mevcommit_getBalance"
                        ]
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "params": {
                        "type": "array",
                        "items": {},
                        "minItems": 0,
                        "maxItems": 0,
                        "description": "No parameters."
                      }
                    },
                    "required": [
                      "jsonrpc",
                      "method",
                      "id",
                      "params"
                    ]
                  },
                  {
                    "type": "object",
                    "title": "mevcommit_estimateBridge",
                    "description": "Estimates the cost and returns the address for instant bridging to the mev-commit chain. No deposit required beforehand.",
                    "properties": {
                      "jsonrpc": {
                        "type": "string",
                        "example": "2.0"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "mevcommit_estimateBridge"
                        ]
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "params": {
                        "type": "array",
                        "items": {},
                        "minItems": 0,
                        "maxItems": 0,
                        "description": "No parameters."
                      }
                    },
                    "required": [
                      "jsonrpc",
                      "method",
                      "id",
                      "params"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonRpcResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "bidderapiv1AutoDeposit": {
        "type": "object",
        "properties": {
          "depositedAmount": {
            "type": "string",
            "description": "Deposited amount of ETH in wei."
          },
          "windowNumber": {
            "type": "string",
            "format": "uint64",
            "description": "Window number for the deposit."
          },
          "isCurrent": {
            "type": "boolean",
            "description": "Indicates if the window is the current window."
          },
          "startBlockNumber": {
            "type": "string",
            "format": "uint64",
            "description": "The initial L1 block number for the window."
          },
          "endBlockNumber": {
            "type": "string",
            "format": "uint64",
            "description": "The final L1 block number for the window."
          }
        }
      },
      "bidderapiv1Bid": {
        "type": "object",
        "example": {
          "amount": "1000000000000000000",
          "block_number": 123456,
          "decay_end_timestamp": 1630000000,
          "decay_start_timestamp": 1630000000,
          "reverting_tx_hashes": [
            "fe4cb47db3630551beedfbd02a71ecc69fd59758e2ba699606e2d5c74284ffa7"
          ],
          "slash_amount": "500000000000000000",
          "tx_hashes": [
            "fe4cb47db3630551beedfbd02a71ecc69fd59758e2ba699606e2d5c74284ffa7",
            "71c1348f2d7ff7e814f9c3617983703435ea7446de420aeac488bf1de35737e8"
          ]
        },
        "properties": {
          "txHashes": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{64}"
            },
            "description": "Hex string encoding of the hashes of the transactions that the bidder wants to include in the block."
          },
          "amount": {
            "type": "string",
            "description": "Amount of ETH that the bidder is willing to pay to the provider for including the transaction in the block.",
            "pattern": "[0-9]+"
          },
          "blockNumber": {
            "type": "string",
            "format": "int64",
            "description": "Max block number that the bidder wants to include the transaction in."
          },
          "decayStartTimestamp": {
            "type": "string",
            "format": "int64",
            "description": "Timestamp at which the bid starts decaying."
          },
          "decayEndTimestamp": {
            "type": "string",
            "format": "int64",
            "description": "Timestamp at which the bid ends decaying."
          },
          "revertingTxHashes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional array of tx hashes that are allowed to revert or be discarded."
          },
          "rawTransactions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional array of RLP encoded raw signed transaction payloads that the bidder wants to include in the block."
          },
          "slashAmount": {
            "type": "string",
            "description": "Amount of ETH that will be slashed from the provider if they fail to include the transaction. If zero, the decayed bid amount is used for slashing.",
            "pattern": "[0-9]+"
          }
        },
        "description": "Unsigned bid message from bidders to the bidder mev-commit node.",
        "title": "Bid message",
        "required": [
          "amount",
          "blockNumber",
          "decayStartTimestamp",
          "decayEndTimestamp"
        ]
      },
      "googlerpcStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            }
          }
        }
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string"
          }
        },
        "additionalProperties": {}
      },
      "v1AutoDepositResponse": {
        "type": "object",
        "example": {
          "amount_per_window": "1000000000000000000",
          "start_window_number": "1"
        },
        "properties": {
          "startWindowNumber": {
            "type": "string",
            "format": "uint64"
          },
          "amountPerWindow": {
            "type": "string"
          }
        },
        "description": "Response on AutoDeposit request.",
        "title": "AutoDeposit response"
      },
      "v1AutoDepositStatusResponse": {
        "type": "object",
        "example": {
          "isAutodepositEnabled": true,
          "window_balances": [
            {
              "depositedAmount": "1000000000000000000",
              "window_number": 1
            },
            {
              "depositedAmount": "1000000000000000000",
              "window_number": 2
            },
            {
              "depositedAmount": "1000000000000000000",
              "window_number": 3
            }
          ]
        },
        "properties": {
          "windowBalances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bidderapiv1AutoDeposit"
            }
          },
          "isAutodepositEnabled": {
            "type": "boolean"
          }
        },
        "description": "AutoDeposit status from the bidder registry.",
        "title": "AutoDeposit status response"
      },
      "v1CancelAutoDepositResponse": {
        "type": "object",
        "example": {
          "window_numbers": [
            1,
            2,
            3
          ]
        },
        "properties": {
          "windowNumbers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            }
          }
        },
        "description": "CancelAutoDeposit deposit from the bidder registry.",
        "title": "CancelAutoDeposit response"
      },
      "v1Commitment": {
        "type": "object",
        "properties": {
          "txHashes": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{64}"
            },
            "description": "Hex string encoding of the hash of the transaction that the bidder wants to include in the block."
          },
          "bidAmount": {
            "type": "string",
            "description": "Amount of ETH that the bidder has agreed to pay to the provider for including the transaction in the block."
          },
          "blockNumber": {
            "type": "string",
            "format": "int64",
            "description": "Max block number that the bidder wants to include the transaction in."
          },
          "receivedBidDigest": {
            "type": "string",
            "description": "Hex string encoding of digest of the bid message signed by the bidder."
          },
          "receivedBidSignature": {
            "type": "string",
            "description": "Hex string encoding of signature of the bidder that sent this bid."
          },
          "commitmentDigest": {
            "type": "string",
            "description": "Hex string encoding of digest of the commitment."
          },
          "commitmentSignature": {
            "type": "string",
            "description": "Hex string encoding of signature of the commitment signed by the provider confirming this transaction."
          },
          "providerAddress": {
            "type": "string",
            "description": "Hex string encoding of the address of the provider that signed the commitment signature."
          },
          "decayStartTimestamp": {
            "type": "string",
            "format": "int64",
            "description": "Timestamp at which the bid starts decaying."
          },
          "decayEndTimestamp": {
            "type": "string",
            "format": "int64",
            "description": "Timestamp at which the bid ends decaying."
          },
          "dispatchTimestamp": {
            "type": "string",
            "format": "int64",
            "description": "Timestamp at which the commitment is published."
          },
          "revertingTxHashes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional array of tx hashes that are allowed to revert or be discarded."
          },
          "slashAmount": {
            "type": "string",
            "description": "Amount of ETH that will be slashed from the provider if they fail to include the transaction."
          }
        }
      },
      "v1DepositResponse": {
        "type": "object",
        "example": {
          "amount": "1000000000000000000",
          "window_number": 1
        },
        "properties": {
          "amount": {
            "type": "string"
          },
          "windowNumber": {
            "type": "string",
            "format": "uint64"
          }
        },
        "description": "Get deposit for bidder in the bidder registry.",
        "title": "Deposit response"
      },
      "v1WithdrawFromWindowsRequest": {
        "type": "object",
        "example": {
          "window_numbers": [
            1,
            2,
            3
          ]
        },
        "properties": {
          "windowNumbers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "description": "Window numbers for withdrawing deposits."
          }
        },
        "description": "Withdraw deposit from the bidder registry.",
        "title": "Withdraw from multiple windows request",
        "required": [
          "windowNumbers"
        ]
      },
      "v1WithdrawFromWindowsResponse": {
        "type": "object",
        "example": {
          "withdraw_responses": [
            {
              "amount": "1000000000000000000",
              "window_number": 1
            },
            {
              "amount": "1000000000000000000",
              "window_number": 2
            },
            {
              "amount": "1000000000000000000",
              "window_number": 3
            }
          ]
        },
        "properties": {
          "withdrawResponses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1WithdrawResponse"
            }
          }
        },
        "description": "Withdraw deposit from the bidder registry.",
        "title": "Withdraw from multiple windows response"
      },
      "v1WithdrawResponse": {
        "type": "object",
        "example": {
          "amount": "1000000000000000000",
          "window_number": 1
        },
        "properties": {
          "amount": {
            "type": "string"
          },
          "windowNumber": {
            "type": "string",
            "format": "uint64"
          }
        },
        "description": "Withdraw deposit from the bidder registry.",
        "title": "Withdraw response"
      },
      "JsonRpcResponse": {
        "type": "object",
        "properties": {
          "jsonrpc": {
            "type": "string",
            "example": "2.0"
          },
          "id": {
            "type": "integer"
          },
          "result": {},
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer"
              },
              "message": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "jsonrpc",
          "id"
        ]
      }
    }
  }
}